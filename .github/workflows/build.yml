name: Build and Deploy BOM
on:
    push:
        branches:
        -   dev
        -   main
        paths-ignore:
        - "README.md"
permissions:
    contents: read # This is required for actions/checkout and build GitHub release

jobs:
    build:
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
        env:
            JAVA_OPTS: "-XX:+TieredCompilation -XX:TieredStopAtLevel=1"
        timeout-minutes: 8
        steps:
        -   uses: actions/checkout@v4
        -   name: Set up JDK
            uses: actions/setup-java@v4
            with:
                distribution: 'temurin'
                java-version: '11'
                cache: 'maven'
        -   name: build
            run: ./mvnw -B -q -ff -ntp verify
    maven-deploy-dev:
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
        env:
            JAVA_OPTS: "-XX:+TieredCompilation -XX:TieredStopAtLevel=1"
        needs: [build]
        timeout-minutes: 8
        if: github.ref == 'refs/heads/dev'
        steps:
            -   uses: actions/checkout@v4
            -   name: Set up JDK
                uses: actions/setup-java@v4
                with:
                    distribution: 'temurin'
                    java-version: '11'
                    cache: 'maven'
            -   name: Extract Maven project version
                run: echo "version=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec -s ./.github/workflows/settings.xml)" >> $GITHUB_OUTPUT
                id: project
            -   name: Show extracted Maven project version
                run: echo ${{ steps.project.outputs.version }}
            -   name: Check version
                if: ${{ !endsWith(steps.project.outputs.version, '-SNAPSHOT') }}
                uses: actions/github-script@v6
                with:
                    script: |
                        core.setFailed('Version not valid for dev')
#            - name: Deploy with Maven
#              run: mvn deploy -ntp -DskipTests -Daether.checksums.algorithms=MD5 -s ./.github/workflows/settings.xml
    maven-deploy-main:
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
        env:
            JAVA_OPTS: "-XX:+TieredCompilation -XX:TieredStopAtLevel=1"
        needs: [build]
        timeout-minutes: 8
        if: github.ref == 'refs/heads/main'
        steps:
            -   uses: actions/checkout@v4
            -   name: Set up JDK
                uses: actions/setup-java@v4
                with:
                    distribution: 'temurin'
                    java-version: '11'
                    cache: 'maven'
            -   name: Extract Maven project version
                run: echo "version=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec -s ./.github/workflows/settings.xml)" >> $GITHUB_OUTPUT
                id: project
            -   name: Show extracted Maven project version
                run: echo ${{ steps.project.outputs.version }}
            -   name: Check version
                if: ${{ endsWith(steps.project.outputs.version, '-SNAPSHOT') }}
                uses: actions/github-script@v6
                with:
                script: |
                    core.setFailed('Version not valid for main')
            - name: Check if tag already exists
              id: version-check
              run: |
                  echo $(git tag -l "${{ steps.project.outputs.version }}")
                  if [ $(git tag -l "${{ steps.project.outputs.version }}") ]; then
                    echo Version ${{ steps.project.outputs.version }} already exists!
                    echo "already-exists=true" >> "$GITHUB_OUTPUT"
                  else
                    echo Version ${{ steps.project.outputs.version }} do not exists!
                    echo "already-exists=false" >> "$GITHUB_OUTPUT"
                  fi
            - name: Test unique version
              run: |
                  echo Version '${{ steps.project.outputs.version }}' already exists! Do not release!
                  exit 1
              if: ${{ steps.version-check.outputs.already-exists == 'true' }}
            - name: Release
              uses: softprops/action-gh-release@v1
              with:
                  body: Release of version ${{ steps.project.outputs.version }}
                  tag_name: ${{ steps.project.outputs.version }}
#            - name: Deploy with Maven
#              run: mvn deploy -ntp -DskipTests -Daether.checksums.algorithms=MD5 -s ./.github/workflows/settings.xml
