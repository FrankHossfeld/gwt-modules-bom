name: Build and Deploy BOM
on:
    push:
        branches:
        -   dev
        -   main
        paths-ignore:
        - "README.md"
permissions:
    contents: read # This is required for actions/checkout and build GitHub release

jobs:
    build:
#        runs-on: ubuntu-latest
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                java_version: ['8', '11', '17']
                os: ['ubuntu-latest']
        env:
            JAVA_OPTS: "-XX:+TieredCompilation -XX:TieredStopAtLevel=1"
        timeout-minutes: 8
        steps:
        -   uses: actions/checkout@v4
        -   name: Set up JDK
            uses: actions/setup-java@v4
            with:
                distribution: 'temurin'
                java-version: ${{ matrix.java_version }}
                cache: 'maven'
        -   name: build
            run: ./mvnw -B -q -ff -ntp verify
        -   name: Extract project Maven version
            id: projectVersion
            run: echo "version=$(./mvnw org.apache.maven.plugins:maven-help-plugin:3.3.0:evaluate -DforceStdout -Dexpression=project.version -q)" >> $GITHUB_OUTPUT



#                server-id: sonatype-nexus-snapshots
#                server-username: CI_DEPLOY_USERNAME
#                server-password: CI_DEPLOY_PASSWORD
                # See https://github.com/actions/setup-java/blob/v2/docs/advanced-usage.md#Publishing-using-Apache-Maven
                # gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }} # Value of the GPG private key to import
                # gpg-passphrase: MAVEN_GPG_PASSPHRASE # env variable for GPG private key passphrase
#    maven-deploy-dev:
#        runs-on: ubuntu-latest
#        needs: [test, owasp]
#        timeout-minutes: 8
#        if: github.ref == 'refs/heads/dev'
#        steps:
#        -   uses: actions/checkout@v3
#        -   name: Configure AWS Credentials
#            uses: aws-actions/configure-aws-credentials@v4
#            with:
#                role-to-assume: arn:aws:iam::260222529753:role/GithubActionCodeArtifact
#                aws-region: eu-central-1
#        -   uses: actions/setup-java@v3
#            with:
#                distribution: temurin
#                java-version: '17'
#                cache: maven
#        -   name: Set CodeArtifact Token
#            run: echo "CODEARTIFACT_AUTH_TOKEN=$(aws codeartifact get-authorization-token --domain nalu-solutions --domain-owner 260222529753 --region eu-central-1 --query authorizationToken --output text)" >> $GITHUB_ENV
#        -   name: Extract Maven project version
#            run: echo "version=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec -s ./.github/workflows/settings.xml)" >> $GITHUB_OUTPUT
#            id: project
#        -   name: Show extracted Maven project version
#            run: echo ${{ steps.project.outputs.version }}
#        -   name: Check version
#            if: ${{ !endsWith(steps.project.outputs.version, '-SNAPSHOT') }}
#            uses: actions/github-script@v6
#            with:
#                script: |
#                    core.setFailed('Version not valid for dev')
#        -   name: Deploy with Maven
#            run: mvn deploy -ntp -DskipTests -Daether.checksums.algorithms=MD5 -s ./.github/workflows/settings.xml
#    maven-deploy-main:
#        runs-on: ubuntu-latest
#        needs: [test, owasp]
#        timeout-minutes: 8
#        if: github.ref == 'refs/heads/main'
#        steps:
#        -   uses: actions/checkout@v3
#            with:
#                fetch-depth: 0
#        -   name: Configure AWS Credentials
#            uses: aws-actions/configure-aws-credentials@v4
#            with:
#                role-to-assume: arn:aws:iam::260222529753:role/GithubActionCodeArtifact
#                aws-region: eu-central-1
#        -   uses: actions/setup-java@v3
#            with:
#                distribution: temurin
#                java-version: '17'
#                cache: maven
#        -   name: Set CodeArtifact Token
#            run: echo "CODEARTIFACT_AUTH_TOKEN=$(aws codeartifact get-authorization-token --domain nalu-solutions --domain-owner 260222529753 --region eu-central-1 --query authorizationToken --output text)" >> $GITHUB_ENV
#        -   name: Extract Maven project version
#            run: echo "version=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec -s ./.github/workflows/settings.xml)" >> $GITHUB_OUTPUT
#            id: project
#        -   name: Show extracted Maven project version
#            run: echo ${{ steps.project.outputs.version }}
#        -   name: Check version
#            if: ${{ endsWith(steps.project.outputs.version, '-SNAPSHOT') }}
#            uses: actions/github-script@v6
#            with:
#                script: |
#                    core.setFailed('Version not valid for main')
#        -   name: Check if tag already exists
#            id: version-check
#            run: |
#                echo $(git tag -l "${{ steps.project.outputs.version }}")
#                if [ $(git tag -l "${{ steps.project.outputs.version }}") ]; then
#                  echo Version ${{ steps.project.outputs.version }} already exists!
#                  echo "already-exists=true" >> "$GITHUB_OUTPUT"
#                else
#                  echo Version ${{ steps.project.outputs.version }} do not exists!
#                  echo "already-exists=false" >> "$GITHUB_OUTPUT"
#                fi
#        -   name: Test unique version
#            run: |
#                echo Version '${{ steps.project.outputs.version }}' already exists! Do not release!
#                exit 1
#            if: ${{ steps.version-check.outputs.already-exists == 'true' }}
#        -   name: Release
#            uses: softprops/action-gh-release@v1
#            with:
#                body: Release of version ${{ steps.project.outputs.version }}
#                tag_name: ${{ steps.project.outputs.version }}
#        -   name: Deploy with Maven
#            run: mvn deploy -ntp -DskipTests -Daether.checksums.algorithms=MD5 -s ./.github/workflows/settings.xml
